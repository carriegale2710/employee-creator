package io.carrie.employee.employee;

import io.carrie.employee.contract.Contract;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import lombok.*;

// Lombok
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder

@Entity
@Table(name = "employees")
public class Employee {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    @Column
    private String firstName;

    @Column
    private String lastName;

    @Column(unique = true)
    private String email;

    @Column
    private String phone; // keep original format

    @Column
    private String address; // dto validation later if needed

    @OneToMany(mappedBy = "employee", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    // Prevent circular references
    @JsonIgnoreProperties({ "employee", "contract" })
    @ToString.Exclude
    private List<Contract> contracts;

    // NOTE - getters and setters, constructors are all generated by Lombok

    // todo later - get isActive (or last isActive) contract

}