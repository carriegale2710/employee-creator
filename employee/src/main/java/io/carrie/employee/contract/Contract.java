package io.carrie.employee.contract;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.hibernate.annotations.*;

import io.carrie.employee.contract.enums.ContractType;
import io.carrie.employee.department.*;
import io.carrie.employee.employee.Employee;

import jakarta.persistence.*;
import jakarta.persistence.Table;
import jakarta.validation.constraints.*;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.Data;

@Data // getters and setters generated by Lombok
@NoArgsConstructor
@AllArgsConstructor
@Builder

@Entity
@Table(name = "contracts")
public class Contract {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    @ManyToOne
    @JoinColumn(name = "employee_id", nullable = false)
    @OnDelete(action = OnDeleteAction.CASCADE) // NOTE - if the employee is deleted, contracts will also be deleted
    private Employee employee;

    @ManyToOne
    @JoinColumn(name = "department_id", nullable = false)
    private Department department;

    @Column
    @Enumerated
    private ContractType contractType;

    @Column
    @DecimalMin(value = "0.01", message = "Salary must be greater than zero")
    private BigDecimal salaryAmount;

    @Column
    @Min(1)
    @Max(40)
    private Integer hoursPerWeek;

    @Column
    private LocalDate startDate;

    @Column
    private LocalDate endDate;

    // Custom business logic method - not generated by Lombok
    public boolean isActive() {
        return this.endDate == null || this.endDate.isAfter(LocalDate.now());
    }

}